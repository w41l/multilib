--- glibc.SlackBuild	2017-05-05 03:09:44.000000000 +0700
+++ glibc-multilib.SlackBuild	2017-05-06 06:40:03.987216526 +0700
@@ -1,6 +1,6 @@
 #!/bin/sh
 
-# Copyright 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017  Patrick J. Volkerding, Sebeka, MN, USA
+# Copyright 2006, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016  Patrick J. Volkerding, Sebeka, MN, USA
 # All rights reserved.
 #
 # Redistribution and use of this script, with or without modification, is
@@ -20,11 +20,17 @@
 #  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 #  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-## build glibc-$VERSION for Slackware
+## build glibc-$VERSION for Slackware, including 32-bit compatibility libraries
 
-VERSION=${VERSION:-$(echo glibc-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
+# Extended to build 32-bit compatibility libraries on x86_64,
+# by Fred Emmott <mail@fredemmott.co.uk>. No copyright claim.
+# Simplified to produce combined packages (no separate compat-32),
+# by Eric Hameleers <alien@slackware.com>
+
+
+VERSION=${VERSION:-2.24}
 CHECKOUT=${CHECKOUT:-""}
-BUILD=${BUILD:-1}
+BUILD=${BUILD:-2alien}
 
 # I was considering disabling NSCD, but MoZes talked me out of it.  :)
 #DISABLE_NSCD=" --disable-nscd "
@@ -79,6 +85,7 @@
 case $ARCH in
   x86_64)
     TARGET=${TARGET:-x86_64}
+    TARGET32=${TARGET32:-i486}
     ;;
   i586)
     # This should be i586 for all 32-bit x86 arch:
@@ -92,6 +99,17 @@
 
 CVSVER=${VERSION}${CHECKOUT}
 
+# If we bootstrap the multilib glibc with a non-multilib version installed,
+# we need to do some things differently:
+if echo "$*" | grep -wq -- "--bootstrap" ; then
+  echo "**"
+  echo "** Bootstrap build"
+  echo "**"
+  BOOTSTRP=1
+else
+  BOOTSTRP=0
+fi
+
 # NOTE!!!  glibc needs to be built against the sanitized kernel headers,
 # which will be installed under /usr/include by the kernel-headers package.
 # Be sure the correct version of the headers package is installed BEFORE
@@ -103,7 +121,7 @@
 TMP=${TMP:-/glibc-tmp-$(mcookie)}
 mkdir -p $TMP
 
-NUMJOBS=${NUMJOBS:-" -j7 "}
+NUMJOBS=${NUMJOBS:--j4}
 
 # This function fixes a doinst.sh file for x86_64.
 # With thanks to Fred Emmott.
@@ -111,6 +129,8 @@
   if [ "x$LIBDIRSUFFIX" = "x" ]; then
     return;
   fi;
+
+  cp -a install/doinst.sh install/doinst32.sh
   # Fix "( cd usr/lib ;" occurrences
   sed -i "s#lib ;#lib${LIBDIRSUFFIX} ;#" install/doinst.sh
   # Fix "lib/" occurrences
@@ -121,6 +141,11 @@
   if [ "$SLACKWARE_ARCH" = "x86_64" ]; then
     sed -i 's#ld-linux.so.2#ld-linux-x86-64.so.2#' install/doinst.sh
   fi
+
+  echo "# Add 32bit library links:"  >> install/doinst.sh
+  cat install/doinst32.sh | grep -e '^( cd lib ' -e '^( cd usr/lib ' \
+    >> install/doinst.sh
+  rm -f install/doinst32.sh
 }
 
 # This is a patch function to put all glibc patches in the build script
@@ -135,10 +160,18 @@
   zcat $CWD/is_IS.diff.gz | patch -p1 --verbose || exit 1
   # Support ru_RU.CP1251 locale:
   zcat $CWD/glibc.ru_RU.CP1251.diff.gz | patch -p1 --verbose || exit 1
+  # This reverts a patch that was made to glibc to fix "namespace leakage",
+  # which seems to cause some build failures (e.g. with conntrack):
+  zcat $CWD/glibc.revert.to.fix.build.breakages.diff.gz | patch -p1 -l --verbose || exit 1
   # Make it harder for people to trick ldd into running code:
   zcat $CWD/glibc.ldd.trace.through.dynamic.linker.diff.gz | patch -p1 --verbose || exit 1
   # Add a C.UTF-8 locale:
   zcat $CWD/glibc-c-utf8-locale.patch.gz | patch -p1 --verbose || exit 1
+  if [ $BOOTSTRP -eq 1 ] ; then
+    # Multilib - Disable check for forced unwind (Patch from eglibc) since we
+    # do not have a multilib glibc yet to link to;
+    zcat $CWD/glibc.pthread-disable-forced-unwind-check.diff.gz | patch -p1 --verbose || exit 1
+  fi
 }
 
 # This is going to be the initial $DESTDIR:
@@ -181,6 +214,12 @@
   || tar xvf $CWD/glibc-$CVSVER.tar.gz
 cd glibc-$CVSVER
 
+# If we use this script to bootstrap a multilib glibc using a bare
+# statically compiled gcc, we need to disable linking to libgcc_eh:
+if [ $BOOTSTRP -eq 1 ] ; then
+  sed -i -e 's/-lgcc_eh//g' Makeconfig
+fi
+
 chown -R root:root .
 find . -perm 666 -exec chmod 644 {} \;
 find . -perm 664 -exec chmod 644 {} \;
@@ -203,31 +242,52 @@
   exit 1
 fi
 
+build_glibc() {
+  CFLAGS="-g $OPTIMIZ -I/usr/include" \
+  ../configure \
+    --prefix=/usr \
+    --libdir=/usr/lib${LIBDIRSUFFIX} \
+    --enable-kernel=2.6.32 \
+    --with-headers=/usr/include \
+    --enable-add-ons \
+    --enable-obsolete-rpc \
+    --enable-profile \
+    $DISABLE_NSCD \
+    --infodir=/usr/info \
+    --mandir=/usr/man \
+    --with-tls \
+    --with-__thread \
+    --without-cvs \
+    $TARGET-slackware-linux
+
+    make $NUMJOBS || exit 1
+    make install install_root=$PKG || exit 1
+    make localedata/install-locales install_root=$PKG || exit 1
+}
+
+# Build the 32-bit binaries first,
+# so that 64-bit stuff overwrites the 32-bit stuff where appropriate:
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  echo "BUILDING DAS 32-BiT NPTL GLIBC"
+  (
+    mkdir build-glibc-compat32-$VERSION
+    cd build-glibc-compat32-$VERSION || exit 1
+    export BUILD_ARCH=$TARGET
+    export TARGET=$TARGET32
+    export LIBDIRSUFFIX=
+    export CC="gcc -m32"
+    export OPTIMIZ="-O3 -march=i486 -mtune=i686"
+    build_glibc
+  ) || exit $?
+fi
+
 # Make build directory:
+
 mkdir build-glibc-$VERSION
 cd build-glibc-$VERSION || exit 1
 
 echo "BUILDING DAS NPTL GLIBC"
-CFLAGS="-g $OPTIMIZ" \
-../configure \
-  --prefix=/usr \
-  --libdir=/usr/lib${LIBDIRSUFFIX} \
-  --enable-kernel=2.6.32 \
-  --with-headers=/usr/include \
-  --enable-add-ons \
-  --enable-obsolete-rpc \
-  --enable-profile \
-  $DISABLE_NSCD \
-  --infodir=/usr/info \
-  --mandir=/usr/man \
-  --with-tls \
-  --with-__thread \
-  --without-cvs \
-  $TARGET-slackware-linux
-
-make $NUMJOBS || make || exit 1
-make install install_root=$PKG || exit 1
-make localedata/install-locales install_root=$PKG || exit 1
+build_glibc
 
 # The prevailing standard seems to be putting unstripped libraries in
 # /usr/lib/debug/ and stripping the debugging symbols from all the other
@@ -268,6 +328,10 @@
     BUGS CONFORMANCE COPYING* FAQ INSTALL LICENSES NAMESPACE \
     NEWS NOTES PROJECTS README* \
     $PKG/usr/doc/glibc-$VERSION
+
+  # Add the SlackBuild:
+  cat $CWD/$(basename $0) > $PKG/usr/doc/glibc-$VERSION/glibc-multilib.SlackBuild
+  chmod 644 $PKG/usr/doc/glibc-$VERSION/glibc-multilib.SlackBuild
 )
 
 # Trim the NEWS file to omit ancient history:
@@ -318,9 +382,15 @@
 mv $PKG/usr/lib${LIBDIRSUFFIX}/lib*_p.a usr/lib${LIBDIRSUFFIX}
 # Profile libs should be stripped.  Use the debug libs to debug...
 ( cd usr/lib${LIBDIRSUFFIX} ; strip -g *.a )
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for the lib dir:
+  mkdir -p usr/lib
+  mv $PKG/usr/lib/lib*_p.a usr/lib
+  ( cd usr/lib ; strip -g *.a )
+fi
 mkdir install
-cp -a $CWD/slack-desc.glibc-profile install/slack-desc
-makepkg -l y -c n $TMP/glibc-profile-$VERSION-$SLACKWARE_ARCH-$BUILD.txz
+cat $CWD/slack-desc.glibc-profile > install/slack-desc
+/sbin/makepkg -l y -c n $TMP/glibc-profile-${VERSION}_multilib-$SLACKWARE_ARCH-$BUILD.txz
 
 # THIS IS NO LONGER PACKAGED (or is it?  might be better to let it be made, and then ship it or not...)
 # glibc-debug:
@@ -328,10 +398,14 @@
 mkdir -p usr/lib${LIBDIRSUFFIX}
 # Might as well just grab these with 'mv' to simplify things later:
 mv $PKG/usr/lib${LIBDIRSUFFIX}/debug usr/lib${LIBDIRSUFFIX}
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for lib:
+  mkdir -p usr/lib
+  mv $PKG/usr/lib/debug usr/lib
+fi
 mkdir install
-cp -a $CWD/slack-desc.glibc-debug install/slack-desc
-## Don't package this:
-#makepkg -l y -c n $TMP/glibc-debug-$VERSION-$SLACKWARE_ARCH-$BUILD.txz
+cat $CWD/slack-desc.glibc-debug > install/slack-desc
+/sbin/makepkg -l y -c n $TMP/glibc-debug-${VERSION}_multilib-$SLACKWARE_ARCH-$BUILD.txz
 ## INSTEAD, NUKE THESE LIBS
 #rm -rf $PKG/usr/lib${LIBDIRSUFFIX}/debug
 
@@ -339,16 +413,23 @@
 cd $PI18N
 mkdir -p usr/lib${LIBDIRSUFFIX}/locale
 mv $PKG/usr/lib${LIBDIRSUFFIX}/locale/* usr/lib${LIBDIRSUFFIX}/locale
+# Leave copies of the C, POSIX, and en_US locales in the main glibc package:
+cp -a usr/lib${LIBDIRSUFFIX}/locale/{C,en_US}* $PKG/usr/lib${LIBDIRSUFFIX}/locale
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for lib:
+  mkdir -p usr/lib/locale
+  mv $PKG/usr/lib/locale/* usr/lib/locale
+  # Leave copies of the C, POSIX, and en_US locales in the main glibc package:
+  cp -a usr/lib/locale/{C,en_US}* $PKG/usr/lib/locale
+fi
 mkdir -p usr/share/{i18n,locale}
 mv $PKG/usr/share/i18n/* usr/share/i18n
 mv $PKG/usr/share/locale/* usr/share/locale
-# Leave copies of the C, POSIX, and en_US locales in the main glibc package:
-cp -a usr/lib${LIBDIRSUFFIX}/locale/{C,en_US}* $PKG/usr/lib${LIBDIRSUFFIX}/locale
 mkdir -p $PKG/usr/share/i18n/locales
 cp -a usr/share/i18n/locales/{C,POSIX,en_US} $PKG/usr/share/i18n/locales
 mkdir install
-cp -a $CWD/slack-desc.glibc-i18n install/slack-desc
-makepkg -l y -c n $TMP/glibc-i18n-$VERSION-$SLACKWARE_ARCH-$BUILD.txz
+cat $CWD/slack-desc.glibc-i18n > install/slack-desc
+/sbin/makepkg -l y -c n $TMP/glibc-i18n-${VERSION}_multilib-$SLACKWARE_ARCH-$BUILD.txz
 
 # glibc-solibs:
 cd $PSOLIBS
@@ -363,6 +444,11 @@
   mv *so* incoming
   mv incoming/libSegFault.so .
 )
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for lib:
+  mkdir -p lib
+  cp -a $PKG/lib/* lib
+fi
 mkdir -p usr
 cp -a $PKG/usr/bin usr
 mv usr/bin/ldd .
@@ -372,6 +458,11 @@
 # The gconv directory has a lot of stuff, but including it here will save some problems.
 # Seems standard elsewhere.
 cp -a $PKG/usr/lib${LIBDIRSUFFIX}/gconv usr/lib${LIBDIRSUFFIX}
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for lib:
+  mkdir -p usr/lib
+  cp -a $PKG/usr/lib/gconv usr/lib
+fi
 # Another manpage abandoned by GNU...
 #mkdir -p usr/man/man1
 #cp -a $PKG/usr/man/man1/ldd.1.gz usr/man/man1
@@ -383,14 +474,14 @@
 rm sbin/*
 mv ldconfig sbin
 mkdir install
-cp -a $CWD/slack-desc.glibc-solibs install/slack-desc
-cp -a $CWD/doinst.sh-glibc-solibs install/doinst.sh
+cat $CWD/slack-desc.glibc-solibs > install/slack-desc
+cat $CWD/doinst.sh-glibc-solibs > install/doinst.sh
 fix_doinst
 sed -i "s/@@VERSION@@/$VERSION/g" install/doinst.sh
 # Ditch links:
 find . -type l -exec rm {} \;
 # Build the package:
-makepkg -l y -c n $TMP/glibc-solibs-$VERSION-$SLACKWARE_ARCH-$BUILD.txz
+/sbin/makepkg -l y -c n $TMP/glibc-solibs-${VERSION}_multilib-$SLACKWARE_ARCH-$BUILD.txz
 
 # And finally, the complete "all-in-one" glibc package is created
 # from whatever was leftover:
@@ -407,9 +498,15 @@
 if [ ! -r usr/lib${LIBDIRSUFFIX}/libm.so ]; then
   ( cd usr/lib${LIBDIRSUFFIX} ; ln -sf ../../lib${LIBDIRSUFFIX}/libm.so.6 libm.so )
 fi
+if [ "x$LIBDIRSUFFIX" = "x64" ]; then
+  # Same exercise for lib:
+  if [ ! -r usr/lib/libm.so ]; then
+    ( cd usr/lib ; ln -sf ../../lib/libm.so.6 libm.so )
+  fi
+fi
 mkdir install
-cp -a $CWD/slack-desc.glibc install/slack-desc
-cp -a $CWD/doinst.sh-glibc install/doinst.sh
+cat $CWD/slack-desc.glibc > install/slack-desc
+cat $CWD/doinst.sh-glibc > install/doinst.sh
 fix_doinst
 sed -i "s/@@VERSION@@/$VERSION/g" install/doinst.sh
 ( cd lib${LIBDIRSUFFIX}
@@ -418,7 +515,7 @@
   mv incoming/libSegFault.so .
 )
 # Build the package:
-/sbin/makepkg -l y -c n $TMP/glibc-$VERSION-$SLACKWARE_ARCH-$BUILD.txz
+/sbin/makepkg -l y -c n $TMP/glibc-${VERSION}_multilib-$SLACKWARE_ARCH-$BUILD.txz
 
 # Done!
 echo
